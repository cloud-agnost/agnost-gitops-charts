apiVersion: v1
kind: ServiceAccount
metadata:
  name: zot
  namespace: {{ .Values.base.namespaceOverride }}

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: zot
  namespace: {{ .Values.base.namespaceOverride }}
data:
  config.json: "{\n  \"storage\": {\n    \"rootDirectory\": \"/tmp/zot\",\n    \"dedupe\": false,\n    \"gc\": false,\n    \"storageDriver\": {\n        \"name\": \"s3\",\n        \"regionendpoint\": \"http://minio.{{ .Values.base.namespaceOverride }}:9000\",\n        \"region\": \"us-east-1\",\n        \"bucket\": \"zot-storage\",\n        \"secure\": false,\n        \"skipverify\": false\n    }\n  },\n  \"http\": {\n    \"address\": \"0.0.0.0\",\n    \"port\": \"5000\",\n    \"realm\": \"zot\" },\n  \"log\": { \"level\": \"debug\" },\n  \"extensions\": {\n    \"search\": {\n      \"enable\": true\n    },\n    \"ui\": {\n      \"enable\": true\n    }\n  }\n}"

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: zot
  namespace: {{ .Values.base.namespaceOverride }}
spec:
  serviceName: zot
  replicas: 1
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      partition: 0
  revisionHistoryLimit: 10
  podManagementPolicy: OrderedReady
  selector:
    matchLabels:
      app: zot
  template:
    metadata:
      labels:
        app: zot
    spec:
      serviceAccountName: zot
      initContainers:
      - name: wait-for-minio
        image: docker.io/curlimages/curl:8.6.0
        command: ['sh', '-c', 'until curl -s http://minio.{{ .Values.base.namespaceOverride }}:9000/minio/health/live; do echo waiting for minio; sleep 2; done']
      containers:
      - name: zot
        image:  ghcr.io/project-zot/zot-linux-amd64:v2.0.4
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5000
          name: zot
        env:
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              key: accessKey
              name: minio
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              key: secretKey
              name: minio
        livenessProbe:
          httpGet:
            path: /v2/
            port: 5000
          failureThreshold: 5
          initialDelaySeconds: 5
          periodSeconds: 30
          timeoutSeconds: 6
        readinessProbe:
          httpGet:
            path: /v2/
            port: 5000
          failureThreshold: 5
          initialDelaySeconds: 5
          periodSeconds: 30
          timeoutSeconds: 6
        startupProbe:
          httpGet:
            path: /v2/
            port: 5000
          failureThreshold: 5
          initialDelaySeconds: 5
          periodSeconds: 30
          timeoutSeconds: 6
        volumeMounts:
        - mountPath: '/etc/zot'
          name: config
      volumes:
      - name: config
        configMap:
          name: zot

---

apiVersion: v1
kind: Service
metadata:
  name: zot
  namespace: {{ .Values.base.namespaceOverride }}
spec:
  ports:
  - port: 5000
    name: zot
  clusterIP: None
  selector:
    app: zot

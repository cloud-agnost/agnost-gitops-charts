apiVersion: v1
kind: ServiceAccount
metadata:
  name: zot
  namespace: {{ .Release.Namespace }}

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: zot
  namespace: {{ .Release.Namespace }}
data:
  config.json: |-
    {
      "storage": {
        "rootDirectory":"/data",
        "commit": true,
        "dedupe": true,
        "gc": true,
        "gcDelay": "1h",
        "gcInterval": "24h"
      },
      "http": {
        "address": "0.0.0.0",
        "port": "5000",
        "realm": "zot" },
      "log": { "level": "debug" },
      "extensions": {
        "search": {
          "enable": true
        },
        "ui": {
          "enable": true
        }
      }
    }

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: zot
  namespace: {{ .Release.Namespace }}
spec:
  serviceName: zot
  replicas: 1
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      partition: 0
  revisionHistoryLimit: 10
  podManagementPolicy: OrderedReady
  selector:
    matchLabels:
      app: zot
  template:
    metadata:
      labels:
        app: zot
    spec:
      serviceAccountName: zot
      containers:
      - name: zot
        image:  ghcr.io/project-zot/zot-linux-amd64:v2.0.4
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5000
          name: zot
        livenessProbe:
          httpGet:
            path: /v2/
            port: 5000
          failureThreshold: 5
          initialDelaySeconds: 5
          periodSeconds: 30
          timeoutSeconds: 6
        readinessProbe:
          httpGet:
            path: /v2/
            port: 5000
          failureThreshold: 5
          initialDelaySeconds: 5
          periodSeconds: 30
          timeoutSeconds: 6
        startupProbe:
          httpGet:
            path: /v2/
            port: 5000
          failureThreshold: 5
          initialDelaySeconds: 5
          periodSeconds: 30
          timeoutSeconds: 6
        volumeMounts:
        - mountPath: '/etc/zot'
          name: config
        - name: data
          mountPath: /data
      volumes:
      - name: config
        configMap:
          name: zot
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 50Gi
---

apiVersion: v1
kind: Service
metadata:
  name: zot
  namespace: {{ .Release.Namespace }}
spec:
  type: NodePort
  ports:
  - port: 5000
    targetPort: zot
    protocol: TCP
    name: zot
    nodePort: 30050
  selector:
    app: zot
